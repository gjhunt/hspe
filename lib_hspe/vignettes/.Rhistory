knitr::opts_chunk$set(echo = TRUE,cache=TRUE,cache.path='c/',fig.path='fig/')
library('dtangle')
names(shen_orr_ex)
head(shen_orr_ex$annotation$mixture)
Y <- shen_orr_ex$data$log
Y[1:4,1:4]
?dtangle2
dir()
dir('..')
devtools::load_all('..')
devtools::load_all('..')
?dtangle2
library('dtangle')
data = shen_orr_ex$data$log[,c(1:10,201:210,401:410)]
mixture_proportions = shen_orr_ex$annotation$mixture
mixture_proportions
pure_samples = list(Liver=c(1,2,3),Brain=c(4,5,6),Lung=c(7,8,9))
dt_out = dtangle2(Y=data, pure_samples = pure_samples)
devtools::load_all('..')
pure_samples = list(Liver=c(1,2,3),Brain=c(4,5,6),Lung=c(7,8,9))
dt_out = dtangle2(Y=data, pure_samples = pure_samples)
devtools::load_all('..')
pure_samples = list(Liver=c(1,2,3),Brain=c(4,5,6),Lung=c(7,8,9))
dt_out = dtangle2(Y=data, pure_samples = pure_samples)
devtools::load_all('..')
pure_samples = list(Liver=c(1,2,3),Brain=c(4,5,6),Lung=c(7,8,9))
dt_out = dtangle2(Y=data, pure_samples = pure_samples)
devtools::load_all('..')
pure_samples = list(Liver=c(1,2,3),Brain=c(4,5,6),Lung=c(7,8,9))
dt_out = dtangle2(Y=data, pure_samples = pure_samples)
data
pure_samples
devtools::load_all('..')
pure_samples = list(Liver=c(1,2,3),Brain=c(4,5,6),Lung=c(7,8,9))
dt_out = dtangle2(Y=data, pure_samples = pure_samples)
devtools::load_all('..')
pure_samples = list(Liver=c(1,2,3),Brain=c(4,5,6),Lung=c(7,8,9))
dt_out = dtangle2(Y=data, pure_samples = pure_samples)
devtools::load_all('..')
pure_samples = list(Liver=c(1,2,3),Brain=c(4,5,6),Lung=c(7,8,9))
dt_out = dtangle2(Y=data, pure_samples = pure_samples)
devtools::load_all('..')
pure_samples = list(Liver=c(1,2,3),Brain=c(4,5,6),Lung=c(7,8,9))
dt_out = dtangle2(Y=data, pure_samples = pure_samples)
pure_samples
data
sum(!is.finite(data))
sum(!is.finite(as.matrix(data)))
pure_samples
devtools::load_all('..')
pure_samples = list(Liver=c(1,2,3),Brain=c(4,5,6),Lung=c(7,8,9))
dt_out = dtangle2(Y=data, pure_samples = pure_samples)
class(data)
devtools::load_all('..')
pure_samples = list(Liver=c(1,2,3),Brain=c(4,5,6),Lung=c(7,8,9))
dt_out = dtangle2(Y=as.matrix(data), pure_samples = pure_samples)
1+1
1+1
devtools::load_all('..')
pure_samples = list(Liver=c(1,2,3),Brain=c(4,5,6),Lung=c(7,8,9))
dt_out = dtangle2(Y=data, pure_samples = pure_samples)
quit()
knitr::opts_chunk$set(echo = TRUE,cache=TRUE,cache.path='c/',fig.path='fig/')
library('dtangle')
names(shen_orr_ex)
head(shen_orr_ex$annotation$mixture)
Y <- shen_orr_ex$data$log
Y[1:4,1:4]
?dtangle2
library('dtangle')
data = shen_orr_ex$data$log[,c(1:10,201:210,401:410)]
mixture_proportions = shen_orr_ex$annotation$mixture
mixture_proportions
devtools::load_all('..')
pure_samples = list(Liver=c(1,2,3),Brain=c(4,5,6),Lung=c(7,8,9))
dt_out = dtangle2(Y=data, pure_samples = pure_samples)
devtools::load_all('..')
pure_samples = list(Liver=c(1,2,3),Brain=c(4,5,6),Lung=c(7,8,9))
dt_out = dtangle2(Y=data, pure_samples = pure_samples)
devtools::load_all('..')
pure_samples = list(Liver=c(1,2,3),Brain=c(4,5,6),Lung=c(7,8,9))
dt_out = dtangle2(Y=data, pure_samples = pure_samples)
data
devtools::load_all('..')
pure_samples = list(Liver=c(1,2,3),Brain=c(4,5,6),Lung=c(7,8,9))
dt_out = dtangle2(Y=data, pure_samples = pure_samples)
devtools::load_all('..')
pure_samples = list(Liver=c(1,2,3),Brain=c(4,5,6),Lung=c(7,8,9))
dt_out = dtangle2(Y=data, pure_samples = pure_samples)
devtools::load_all('..')
pure_samples = list(Liver=c(1,2,3),Brain=c(4,5,6),Lung=c(7,8,9))
dt_out = dtangle2(Y=data, pure_samples = pure_samples,verbose=TRUE)
devtools::load_all('..')
pure_samples = list(Liver=c(1,2,3),Brain=c(4,5,6),Lung=c(7,8,9))
dt_out = dtangle2(Y=data, pure_samples = pure_samples,verbose=TRUE)
devtools::load_all('..')
pure_samples = list(Liver=c(1,2,3),Brain=c(4,5,6),Lung=c(7,8,9))
dt_out = dtangle2(Y=data, pure_samples = pure_samples,verbose=TRUE)
devtools::load_all('..')
pure_samples = list(Liver=c(1,2,3),Brain=c(4,5,6),Lung=c(7,8,9))
dt_out = dtangle2(Y=data, pure_samples = pure_samples,verbose=TRUE)
devtools::load_all('..')
pure_samples = list(Liver=c(1,2,3),Brain=c(4,5,6),Lung=c(7,8,9))
dt_out = dtangle2(Y=data, pure_samples = pure_samples,verbose=TRUE,optim_opts=list(pkg="nloptr"))
devtools::load_all('..')
pure_samples = list(Liver=c(1,2,3),Brain=c(4,5,6),Lung=c(7,8,9))
dt_out = dtangle2(Y=data, pure_samples = pure_samples,verbose=TRUE,optim_opts=list(pkg="nloptr"))
devtools::load_all('..')
pure_samples = list(Liver=c(1,2,3),Brain=c(4,5,6),Lung=c(7,8,9))
dt_out = dtangle2(Y=data, pure_samples = pure_samples,verbose=TRUE,optim_opts=list(pkg="nloptr"))
devtools::load_all('..')
pure_samples = list(Liver=c(1,2,3),Brain=c(4,5,6),Lung=c(7,8,9))
dt_out = dtangle2(Y=data, pure_samples = pure_samples,verbose=TRUE,optim_opts=list(pkg="nloptr"))
devtools::load_all('..')
pure_samples = list(Liver=c(1,2,3),Brain=c(4,5,6),Lung=c(7,8,9))
dt_out = dtangle2(Y=data, pure_samples = pure_samples,verbose=TRUE,optim_opts=list(pkg="nloptr"))
true_proportions = mixture_proportions[-(1:9),]
matplot(true_proportions,dt_out$estimates, xlim = c(0,1),ylim=c(0,1),xlab="Truth",ylab="Estimates")
devtools::load_all('..')
pure_samples = list(Liver=c(1,2,3),Brain=c(4,5,6),Lung=c(7,8,9))
dt_out = dtangle2(Y=data, pure_samples = pure_samples,verbose=TRUE)#,optim_opts=list(pkg="nloptr"))
true_proportions = mixture_proportions[-(1:9),]
matplot(true_proportions,dt_out$estimates, xlim = c(0,1),ylim=c(0,1),xlab="Truth",ylab="Estimates")
true_proportions = mixture_proportions[-(1:9),]
matplot(true_proportions,dt_out$estimates, xlim = c(0,1),ylim=c(0,1),xlab="Truth",ylab="Estimates")
devtools::load_all('..')
pure_samples = list(Liver=c(1,2,3),Brain=c(4,5,6),Lung=c(7,8,9))
dt_out = dtangle2(Y=data, pure_samples = pure_samples,verbose=TRUE)#,optim_opts=list(pkg="nloptr"))
dt_out2 = dtangle2(Y=data, pure_samples = pure_samples,verbose=TRUE,optim_opts=list(pkg="nloptr"))
dt_out$estimates
matplot(dt_out$estimates,dt_out2$estimates)
mixture_samples = data[-(1:9),]
reference_samples = data[1:9,]
dt_out = dtangle2(Y=mixture_samples, reference=reference_samples,pure_samples = pure_samples,optim_opts=list(pkg="nloptr"))
matplot(true_proportions,dt_out$estimates, xlim = c(0,1),ylim=c(0,1),xlab="Truth",ylab="Estimates")
matplot(true_proportions,dt_out$estimates, xlim = c(0,1),ylim=c(0,1),xlab="Truth",ylab="Estimates")
devtools::load_all('..')
pure_samples = list(Liver=c(1,2,3),Brain=c(4,5,6),Lung=c(7,8,9))
dt_out = dtangle2(Y=data, pure_samples = pure_samples,verbose=TRUE,optim_opts=list(pkg="nloptr",maxeval=10))
devtools::load_all('..')
pure_samples = list(Liver=c(1,2,3),Brain=c(4,5,6),Lung=c(7,8,9))
dt_out = dtangle2(Y=data, pure_samples = pure_samples,verbose=TRUE,optim_opts=list(pkg="nloptr",maxeval=1))
true_proportions = mixture_proportions[-(1:9),]
matplot(true_proportions,dt_out$estimates, xlim = c(0,1),ylim=c(0,1),xlab="Truth",ylab="Estimates")
devtools::load_all('..')
pure_samples = list(Liver=c(1,2,3),Brain=c(4,5,6),Lung=c(7,8,9))
dt_out = dtangle2(Y=data, pure_samples = pure_samples,verbose=TRUE,optim_opts=list(pkg="nloptr",maxeval=10))
true_proportions = mixture_proportions[-(1:9),]
matplot(true_proportions,dt_out$estimates, xlim = c(0,1),ylim=c(0,1),xlab="Truth",ylab="Estimates")
devtools::load_all('..')
pure_samples = list(Liver=c(1,2,3),Brain=c(4,5,6),Lung=c(7,8,9))
dt_out = dtangle2(Y=data, pure_samples = pure_samples,verbose=TRUE,optim_opts=list(pkg="nloptr",maxeval=100))
true_proportions = mixture_proportions[-(1:9),]
matplot(true_proportions,dt_out$estimates, xlim = c(0,1),ylim=c(0,1),xlab="Truth",ylab="Estimates")
devtools::load_all('..')
pure_samples = list(Liver=c(1,2,3),Brain=c(4,5,6),Lung=c(7,8,9))
dt_out = dtangle2(Y=data, pure_samples = pure_samples,verbose=TRUE,optim_opts=list(pkg="nloptr",maxeval=500))
true_proportions = mixture_proportions[-(1:9),]
matplot(true_proportions,dt_out$estimates, xlim = c(0,1),ylim=c(0,1),xlab="Truth",ylab="Estimates")
devtools::load_all('..')
pure_samples = list(Liver=c(1,2,3),Brain=c(4,5,6),Lung=c(7,8,9))
dt_out = dtangle2(Y=data, pure_samples = pure_samples,verbose=TRUE,optim_opts=list(pkg="nloptr",maxeval=5000))
true_proportions = mixture_proportions[-(1:9),]
matplot(true_proportions,dt_out$estimates, xlim = c(0,1),ylim=c(0,1),xlab="Truth",ylab="Estimates")
devtools::load_all('..')
pure_samples = list(Liver=c(1,2,3),Brain=c(4,5,6),Lung=c(7,8,9))
dt_out = dtangle2(Y=data, pure_samples = pure_samples,verbose=TRUE,optim_opts=list(pkg="nloptr"))
pure_samples = list(Liver=c(1,2,3),Brain=c(4,5,6),Lung=c(7,8,9))
dt_out = dtangle2(Y=data, pure_samples = pure_samples,optim_opts=list(pkg="nloptr"))
knitr::opts_chunk$set(echo = TRUE,cache=TRUE,cache.path='c/',fig.path='fig/')
library('dtangle')
names(shen_orr_ex)
head(shen_orr_ex$annotation$mixture)
Y <- shen_orr_ex$data$log
Y[1:4,1:4]
?dtangle2
library('dtangle')
data = shen_orr_ex$data$log[,c(1:10,201:210,401:410)]
mixture_proportions = shen_orr_ex$annotation$mixture
mixture_proportions
pure_samples = list(Liver=c(1,2,3),Brain=c(4,5,6),Lung=c(7,8,9))
dt_out = dtangle2(Y=data, pure_samples = pure_samples,optim_opts=list(pkg="nloptr"))
true_proportions = mixture_proportions[-(1:9),]
matplot(true_proportions,dt_out$estimates, xlim = c(0,1),ylim=c(0,1),xlab="Truth",ylab="Estimates")
mixture_samples = data[-(1:9),]
reference_samples = data[1:9,]
dt_out = dtangle2(Y=mixture_samples, reference=reference_samples,pure_samples = pure_samples)
matplot(true_proportions,dt_out$estimates, xlim = c(0,1),ylim=c(0,1),xlab="Truth",ylab="Estimates")
ref_reduced = t(sapply(pure_samples,function(x)colMeans(reference_samples[x,,drop=FALSE])))
dt_out = dtangle2(Y=mixture_samples, reference=ref_reduced)
matplot(true_proportions,dt_out$estimates, xlim = c(0,1),ylim=c(0,1),xlab="Truth",ylab="Estimates")
dt_out = dtangle2(Y=mixture_samples, references = ref_reduced)
dt_out = dtangle2(Y=mixture_samples, references = ref_reduced,marker_method = "diff")
dt_out$n_markers
dt_out = dtangle2(Y=mixture_samples, references = ref_reduced,marker_method = "diff",n_markers=3)
dt_out$n_markers
dt_out = dtangle2(Y=mixture_samples, references = ref_reduced,marker_method = "diff",n_markers=c(1,2,3))
dt_out$n_markers
dt_out = dtangle2(Y=mixture_samples, references = ref_reduced,marker_method = "diff",n_markers=.075)
dt_out$n_markers
dt_out = dtangle2(Y=mixture_samples, references = ref_reduced,marker_method = "diff",n_markers=c(.1,.15,.05))
dt_out$n_markers
marker_genes = list(c(1,2,3),
c(4,5,6),
c(7,8,9))
dt_out = dtangle2(Y=mixture_samples, references = ref_reduced,markers=marker_genes)
dt_out$n_markers
mrkrs = find_markers(Y=mixture_samples, references = ref_reduced)
names(mrkrs)
dt_out = dtangle2(Y = mixture_samples,references = ref_reduced,markers=mrkrs,n_markers=.1)
lin_scale_mix = 2^mixture_samples
lin_scale_ref = 2^ref_reduced
dt_out = dtangle2(Y=lin_scale_mix,references = lin_scale_ref,inv_scale = base::identity,
seed=1234,markers = mrkrs$L)
head(dt_out$estimates)
ahs_scale_mix = asinh(lin_scale_mix)
ahs_scale_ref = asinh(lin_scale_ref)
dt_out = dtangle2(Y=ahs_scale_mix,references = ahs_scale_ref,inv_scale = base::sinh,
seed=1234,markers = mrkrs$L)
head(dt_out$estimates)
knitr::opts_chunk$set(echo = TRUE,cache=TRUE,cache.path='c/',fig.path='fig/')
pure_samples = list(Liver=c(1,2,3),Brain=c(4,5,6),Lung=c(7,8,9))
dt_out = dtangle2(Y=data, pure_samples = pure_samples,optim_opts=list(pkg="nloptr",))
library('dtangle')
names(shen_orr_ex)
head(shen_orr_ex$annotation$mixture)
Y <- shen_orr_ex$data$log
Y[1:4,1:4]
?dtangle2
library('dtangle')
data = shen_orr_ex$data$log[,c(1:10,201:210,401:410)]
mixture_proportions = shen_orr_ex$annotation$mixture
mixture_proportions
pure_samples = list(Liver=c(1,2,3),Brain=c(4,5,6),Lung=c(7,8,9))
dt_out = dtangle2(Y=data, pure_samples = pure_samples,optim_opts=list(pkg="nloptr",))
pure_samples = list(Liver=c(1,2,3),Brain=c(4,5,6),Lung=c(7,8,9))
dt_out = dtangle2(Y=data, pure_samples = pure_samples,optim_opts=list(pkg="nloptr"))
dt_out
dt_out$estimates
rm(dt_out)
pure_samples = list(Liver=c(1,2,3),Brain=c(4,5,6),Lung=c(7,8,9))
dt_out = dtangle2(Y=data, pure_samples = pure_samples,optim_opts=list(pkg="nloptr"))
dt_out
devtools::load_all('..')
pure_samples = list(Liver=c(1,2,3),Brain=c(4,5,6),Lung=c(7,8,9))
dt_out = dtangle2(Y=data, pure_samples = pure_samples,optim_opts=list(pkg="nloptr"))
devtools::load_all('..')
pure_samples = list(Liver=c(1,2,3),Brain=c(4,5,6),Lung=c(7,8,9))
dt_out = dtangle2(Y=data, pure_samples = pure_samples,optim_opts=list(pkg="nloptr"))
pure_samples = list(Liver=c(1,2,3),Brain=c(4,5,6),Lung=c(7,8,9))
dt_out = dtangle2(Y=data, pure_samples = pure_samples,optim_opts=list(pkg="nloptr"),verbose=TRUE)
knitr::opts_chunk$set(echo = TRUE,cache=TRUE,cache.path='c/',fig.path='fig/')
library('dtangle')
names(shen_orr_ex)
head(shen_orr_ex$annotation$mixture)
library('dtangle')
names(shen_orr_ex)
head(shen_orr_ex$annotation$mixture)
Y <- shen_orr_ex$data$log
Y[1:4,1:4]
?dtangle2
library('dtangle')
data = shen_orr_ex$data$log[,c(1:10,201:210,401:410)]
mixture_proportions = shen_orr_ex$annotation$mixture
mixture_proportions
pure_samples = list(Liver=c(1,2,3),Brain=c(4,5,6),Lung=c(7,8,9))
dt_out = dtangle2(Y=data, pure_samples = pure_samples,optim_opts=list(pkg="nloptr"))
knitr::opts_chunk$set(echo = TRUE,cache=TRUE,cache.path='c/',fig.path='fig/')
library('hspe')
names(shen_orr_ex)
head(shen_orr_ex$annotation$mixture)
Y <- shen_orr_ex$data$log
Y[1:4,1:4]
?hspe
data = shen_orr_ex$data$log[,c(1:10,201:210,401:410)]
mixture_proportions = shen_orr_ex$annotation$mixture
mixture_proportions
pure_samples = list(Liver=c(1,2,3),Brain=c(4,5,6),Lung=c(7,8,9))
dt_out = dtangle2(Y=data, pure_samples = pure_samples,optim_opts=list(pkg="nloptr"))
pure_samples = list(Liver=c(1,2,3),Brain=c(4,5,6),Lung=c(7,8,9))
dt_out = hspe(Y=data, pure_samples = pure_samples,optim_opts=list(pkg="nloptr"))
true_proportions = mixture_proportions[-(1:9),]
matplot(true_proportions,dt_out$estimates, xlim = c(0,1),ylim=c(0,1),xlab="Truth",ylab="Estimates")
mixture_samples = data[-(1:9),]
reference_samples = data[1:9,]
dt_out = dtangle2(Y=mixture_samples, reference=reference_samples,pure_samples = pure_samples)
mixture_samples = data[-(1:9),]
reference_samples = data[1:9,]
dt_out = hspe(Y=mixture_samples, reference=reference_samples,pure_samples = pure_samples)
matplot(true_proportions,dt_out$estimates, xlim = c(0,1),ylim=c(0,1),xlab="Truth",ylab="Estimates")
ref_reduced = t(sapply(pure_samples,function(x)colMeans(reference_samples[x,,drop=FALSE])))
dt_out = dtangle2(Y=mixture_samples, reference=ref_reduced)
ref_reduced = t(sapply(pure_samples,function(x)colMeans(reference_samples[x,,drop=FALSE])))
dt_out = hspe(Y=mixture_samples, reference=ref_reduced)
matplot(true_proportions,dt_out$estimates, xlim = c(0,1),ylim=c(0,1),xlab="Truth",ylab="Estimates")
dt_out = dtangle2(Y=mixture_samples, references = ref_reduced)
dt_out = hspe(Y=mixture_samples, references = ref_reduced)
dt_out = hspe(Y=mixture_samples, references = ref_reduced,marker_method = "diff")
dt_out$n_markers
dt_out = dtangle2(Y=mixture_samples, references = ref_reduced,marker_method = "diff",n_markers=3)
dt_out = hspe(Y=mixture_samples, references = ref_reduced,marker_method = "diff",n_markers=3)
dt_out$n_markers
dt_out = hspe(Y=mixture_samples, references = ref_reduced,marker_method = "diff",n_markers=c(1,2,3))
dt_out$n_markers
knitr::opts_chunk$set(echo = TRUE,cache=TRUE,cache.path='c/',fig.path='fig/')
library('hspe')
names(shen_orr_ex)
head(shen_orr_ex$annotation$mixture)
Y <- shen_orr_ex$data$log
Y[1:4,1:4]
?hspe
data = shen_orr_ex$data$log[,c(1:10,201:210,401:410)]
mixture_proportions = shen_orr_ex$annotation$mixture
mixture_proportions
pure_samples = list(Liver=c(1,2,3),Brain=c(4,5,6),Lung=c(7,8,9))
dt_out = hspe(Y=data, pure_samples = pure_samples,optim_opts=list(pkg="nloptr"))
true_proportions = mixture_proportions[-(1:9),]
matplot(true_proportions,dt_out$estimates, xlim = c(0,1),ylim=c(0,1),xlab="Truth",ylab="Estimates")
mixture_samples = data[-(1:9),]
reference_samples = data[1:9,]
dt_out = hspe(Y=mixture_samples, reference=reference_samples,pure_samples = pure_samples)
matplot(true_proportions,dt_out$estimates, xlim = c(0,1),ylim=c(0,1),xlab="Truth",ylab="Estimates")
ref_reduced = t(sapply(pure_samples,function(x)colMeans(reference_samples[x,,drop=FALSE])))
dt_out = hspe(Y=mixture_samples, reference=ref_reduced)
matplot(true_proportions,dt_out$estimates, xlim = c(0,1),ylim=c(0,1),xlab="Truth",ylab="Estimates")
dt_out = hspe(Y=mixture_samples, references = ref_reduced)
dt_out = hspe(Y=mixture_samples, references = ref_reduced,marker_method = "diff")
dt_out$n_markers
dt_out = hspe(Y=mixture_samples, references = ref_reduced,marker_method = "diff",n_markers=3)
dt_out$n_markers
dt_out = hspe(Y=mixture_samples, references = ref_reduced,marker_method = "diff",n_markers=c(1,2,3))
dt_out$n_markers
dt_out = hspe(Y=mixture_samples, references = ref_reduced,marker_method = "diff",n_markers=.075)
dt_out$n_markers
dt_out = hspe(Y=mixture_samples, references = ref_reduced,marker_method = "diff",n_markers=c(.1,.15,.05))
dt_out$n_markers
marker_genes = list(c(1,2,3),
c(4,5,6),
c(7,8,9))
dt_out = hspe(Y=mixture_samples, references = ref_reduced,markers=marker_genes)
dt_out$n_markers
mrkrs = find_markers(Y=mixture_samples, references = ref_reduced)
names(mrkrs)
dt_out = hspe(Y = mixture_samples,references = ref_reduced,markers=mrkrs,n_markers=.1)
lin_scale_mix = 2^mixture_samples
lin_scale_ref = 2^ref_reduced
dt_out = hspe(Y=lin_scale_mix,references = lin_scale_ref,inv_scale = base::identity,
seed=1234,markers = mrkrs$L)
head(dt_out$estimates)
ahs_scale_mix = asinh(lin_scale_mix)
ahs_scale_ref = asinh(lin_scale_ref)
dt_out = hspe(Y=ahs_scale_mix,references = ahs_scale_ref,inv_scale = base::sinh,
seed=1234,markers = mrkrs$L)
head(dt_out$estimates)
out = hspe(Y=lin_scale_mix,references = lin_scale_ref,inv_scale = base::identity,fit_scale=sqrt,seed=1234,markers = mrkrs$L)
head(out$estimates)
out = hspe(Y=lin_scale_mix,references = lin_scale_ref,inv_scale = base::identity,fit_scale=base::log,seed=1234,markers = mrkrs$L)
head(out$estimates)
base::identity,fit_scale=base::sqrt,seed=1234,markers = mrkrs$L)
head(out$estimates)
base::identity,fit_scale=base::sqrt,seed=1234,markers = mrkrs$L)
out = hspe(Y=lin_scale_mix,references = lin_scale_ref,inv_scale = base::identity,fit_scale=base::sqrt,seed=1234,markers = mrkrs$L)
head(out$estimates)
out = hspe(Y=lin_scale_mix,references = lin_scale_ref,inv_scale = base::identity,fit_scale=base::log,loss_fn="L2",seed=1234,markers = mrkrs$L)
head(out$estimates)
